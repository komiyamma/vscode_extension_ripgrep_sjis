{"version":3,"sources":["webpack://rg-sjis/./src/extension.ts","webpack://rg-sjis/external \"child_process\"","webpack://rg-sjis/external \"path\"","webpack://rg-sjis/external \"vscode\"","webpack://rg-sjis/webpack/bootstrap","webpack://rg-sjis/webpack/startup"],"names":["exec","path","context","command","dirname","__filename","error","stdout","stderr","console","log","vscode","window","showInformationMessage","disposable","commands","registerCommand","subscriptions","push","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__"],"mappings":"uIAEA,eACA,IAAIA,EAAO,YACX,MAAMC,EAAO,EAAQ,KAIrB,oBAAyBC,GACxB,IAAIC,EAAUF,EAAKG,QAAQC,YAAc,eACzCL,EAAKG,GAAS,SAASG,EAAWC,EAAYC,GAE/B,OAAVF,EAMJG,QAAQC,IAAI,WAAaH,GALvBE,QAAQC,IAAI,eAAiBJ,MAShCK,EAAOC,OAAOC,uBAAuB,4DAKrC,IAAIC,EAAaH,EAAOI,SAASC,gBAAgB,mBAAmB,SAEpEd,EAAQe,cAAcC,KAAKJ,IAI5B,wBAECL,QAAQC,IAAI,+DACZC,EAAOC,OAAOC,uBAAuB,+DAErC,IAAIV,EAAUF,EAAKG,QAAQC,YAAc,gCACzCL,EAAKG,GAAS,SAASG,EAAWC,EAAYC,GAE/B,OAAVF,GACFG,QAAQC,IAAI,eAAiBJ,Q,QC1CjCa,EAAOC,QAAUC,QAAQ,kB,QCAzBF,EAAOC,QAAUC,QAAQ,S,QCAzBF,EAAOC,QAAUC,QAAQ,YCCrBC,EAA2B,GCE/B,ODCA,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUJ,QAG3C,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAK,EAAoBD,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,QCjBRG,CAAoB,M","file":"extension.js","sourcesContent":["// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\nvar exec = require('child_process').exec;\nconst path = require('path');\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n\tvar command = path.dirname(__filename) + \"/rg_sjis.exe\";\n\texec(command, function(error:any, stdout:any, stderr:any) {\n\t\t// シェル上でコマンドを実行できなかった場合のエラー処理\n\t\tif (error !== null) {\n\t\t  console.log('exec error: ' + error);\n\t\t  return;\n\t\t}\n\t  \n\t\t// シェル上で実行したコマンドの標準出力が stdout に格納されている\n\t\tconsole.log('stdout: ' + stdout);\n\t  });\n\t// Use the console to output diagnostic information (console.log) and errors (console.error)\n\t// This line of code will only be executed once when your extension is activated\n\tvscode.window.showInformationMessage('Congratulations, your extension \"rg-sjis\" is now Active!');\n\n\t// The command has been defined in the package.json file\n\t// Now provide the implementation of the command with registerCommand\n\t// The commandId parameter must match the command field in package.json\n\tlet disposable = vscode.commands.registerCommand('rg-sjis.Install', () => {});\n\n\tcontext.subscriptions.push(disposable);\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {\n\t// abc\n\tconsole.log('Congratulations, your extension \"rg-sjis\" is now de-active!');\n\tvscode.window.showInformationMessage('Congratulations, your extension \"rg-sjis\" is now De-Active!');\n\n\tvar command = path.dirname(__filename) + \"/rg_sjis.exe --mode-uninstall\";\n\texec(command, function(error:any, stdout:any, stderr:any) {\n\t\t// シェル上でコマンドを実行できなかった場合のエラー処理\n\t\tif (error !== null) {\n\t\t  console.log('exec error: ' + error);\n\t\t  return;\n\t\t}\n\t});\n}\n","module.exports = require(\"child_process\");;","module.exports = require(\"path\");;","module.exports = require(\"vscode\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(112);\n"],"sourceRoot":""}